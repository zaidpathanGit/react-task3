{"version":3,"sources":["components/Constants.js","components/Validator.js","components/Rest.js","components/Header.js","components/Modal.js","components/Loader.js","components/Globals.js","components/Login.js","asset/images/logout-icon.png","asset/images/loader.gif","asset/images/empty-list-icon.png","asset/images/card-background.jpg","asset/images/calender-icon.png","components/Timer.js","components/List.js","components/Home.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["headerConst","homeConst","listConst","loginConst","systemMsg","requiredValidator","value","field","errRef","innerHTML","emailValidator","test","lengthValidator","length","cpasswordValidator","value1","value2","MASTER_URL","post_no_auth","endpoint","values","fetch","method","body","get","global","token","username","post","Header","props","logout","bind","localStorage","removeItem","window","location","href","className","style","display","this","side_menu_visibility","src","require","alt","logoutIconAltText","onClick","appTitle","appSubTitle","Component","Modal","visibility","ref","title","onClose","content","Loader","Login","state","isRegActive","errormsg","modalVisibility","loaderVisibility","handleSubmit","login","reg","getItem","homePageRedirectUrl","e","preventDefault","setState","formData","FormData","append","target","refs","form","reset","error","alert","internalError","then","response","ok","json","res","setItem","msg","catch","textReg","textLogin","onSubmit","type","name","placeholder","required","onKeyUp","autoComplete","password","pass","cpassword","email","toUpperCase","module","exports","Timer","hours","minutes","counter","countDown1","countDown2","time","Math","round","setTimeout","List","collection","emptyListIconAltText","map","item","index","width","cardBackgroundAltText","taskname","projectname","created_date","textAlign","calenderIconAltText","sdate","edate","abs","moment","diff","Home","rowData","contentType","modalTitle","getUserTask","search","modalContent","getUserTaskUrl","status","stime","etime","timeValidationError","getUserTaskByDateUrl","futureDateValidationError","cols","onChange","reverse","Main","exact","path","component","homePageUrl","to","App","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa58249a.chunk.js","sourcesContent":["//Header.js constants\r\nexport const headerConst = {\r\n    \"logoutIconAltText\": \"logout-icon\",\r\n    \"appTitle\": \"Task Scheduler\",\r\n    \"appSubTitle\": \"A simple tool to manage your task time Schedules.\",\r\n}\r\n\r\n//Home.js constants\r\nexport const homeConst = {\r\n    \"getUserTaskUrl\": \"task?\",\r\n    \"getUserTaskByDateUrl\": \"taskbydate?date=\",\r\n    \"futureDateValidationError\": \"Future date is not allowed.!\",\r\n}\r\n\r\n//List.js constants\r\nexport const listConst = {\r\n    \"emptyListIconAltText\": \"empty-list\",\r\n    \"cardBackgroundAltText\": \"card-background\",\r\n    \"calenderIconAltText\": \"calender-icon\",\r\n}\r\n\r\n//Login.js constants\r\nexport const loginConst = {\r\n    \"homePageUrl\": \"/home\",\r\n    \"homePageRedirectUrl\": \"/react-task3/#/home\",\r\n    \"textLogin\": \" Login \",\r\n    \"textReg\": \" Register \",\r\n\r\n}\r\n\r\n//system messages\r\nexport const systemMsg = {\r\n    \"internalError\": \"Internal Server Error Please Contact To Support Team.!\",\r\n    \"timeValidationError\": \"End time should be greater than start time.!\",\r\n    \"processing\": \"We are processing your request.!\",\r\n}","//Required field validator\r\nexport const requiredValidator = (value, field, errRef) => {\r\n    value === \"\" ? errRef.innerHTML = field + \" is required.!\" : errRef.innerHTML = \"\";\r\n}\r\n\r\n//Email field validator\r\nexport const emailValidator = (value, field, errRef) => {\r\n    /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)\r\n        ?\r\n        errRef.innerHTML = \"\"\r\n        :\r\n        errRef.innerHTML = field + \" is not valid.!\"\r\n}\r\n\r\n//Minimum length field validator\r\nexport const lengthValidator = (value, field, errRef) => {\r\n    value.length < 6 ? errRef.innerHTML = field + \" must be atleast 6 character.!\" : errRef.innerHTML = \"\";\r\n}\r\n\r\n//Password and confirm password field validator\r\nexport const cpasswordValidator = (value1, value2, field, errRef) => {\r\n    value1 !== value2 ? errRef.innerHTML = field + \" is not same as password.!\" : errRef.innerHTML = \"\";\r\n}\r\n","import './Globals';\r\n\r\n// const MASTER_URL = \"http://localhost:8000/rtcrc/index.php/api/\";\r\nconst MASTER_URL = \"http://zaidpathansite.000webhostapp.com/index.php/api/\";\r\n\r\n//POST function without authorization token\r\nexport const post_no_auth = (endpoint, values) =>\r\n    fetch(MASTER_URL + endpoint, {\r\n        method: \"POST\",\r\n        body: values,\r\n    });\r\n\r\n//GET function\r\nexport const get = (endpoint) =>\r\n    fetch(MASTER_URL + endpoint + \"Authorization=\" + global.token + \"&username=\" + global.username, {\r\n        method: \"GET\",\r\n        // headers: {\r\n        //     \"Authorization\": localStorage.getItem(\"Token\"),\r\n        //      \"Username\": localStorage.getItem('username'),\r\n        // }\r\n    });\r\n\r\n//POST function with authorization\r\nexport const post = (endpoint, values) =>\r\n    fetch(MASTER_URL + endpoint, {\r\n        method: \"POST\",\r\n        // headers: {\r\n        //     \"Authorization\": localStorage.getItem(\"Token\"),\r\n        //     \"Username\": localStorage.getItem('username'),\r\n        // },\r\n        body: values,\r\n    });\r\n","import React, { Component } from 'react';\r\nimport { headerConst } from './Constants';\r\nimport '../scss/HeaderStyle.scss'\r\nimport './Globals';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //Binding functions\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"Token\");\r\n        localStorage.removeItem(\"username\");\r\n\r\n        global.token = null;\r\n        global.username = null;\r\n\r\n        window.location.href = \"/react-task3\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Header\">\r\n\r\n                <img\r\n                    style={{ display: this.props.side_menu_visibility }}\r\n                    src={require(\"../asset/images/logout-icon.png\")}\r\n                    className=\"side-menu-icon\"\r\n                    alt={headerConst.logoutIconAltText}\r\n                    onClick={() => this.logout()} />\r\n\r\n                <div className=\"title\">\r\n                    {headerConst.appTitle}\r\n\r\n                    <div className=\"sub-title\">\r\n                        {headerConst.appSubTitle}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport '../scss/HeaderStyle.scss';\r\n\r\nclass Modal extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"overlay\" style={{ display: this.props.visibility }} ref=\"modal\">\r\n                <div className=\"popup\">\r\n\r\n                    <h3> {this.props.title} </h3> <hr />\r\n\r\n                    <button\r\n                        className=\"btn-regular close\"\r\n                        onClick={this.props.onClose}>\r\n                        x\r\n                    </button>\r\n\r\n                    <div className=\"content\"> {this.props.content} </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport '../scss/HeaderStyle.scss';\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <img\r\n          src={require('../asset/images/loader.gif')}\r\n          className=\"loader\"\r\n          alt=\"Loader\"\r\n          style={{ display: this.props.visibility }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;","//File to store global variable to reduced processing\r\n\r\nglobal.token = null;\r\nglobal.username = null;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Modal from './Modal';\r\nimport { post_no_auth } from '../components/Rest';\r\nimport {\r\n    emailValidator,\r\n    lengthValidator,\r\n    cpasswordValidator\r\n} from '../components/Validator';\r\nimport '../scss/LoginStyle.scss';\r\nimport { loginConst, systemMsg } from './Constants';\r\nimport Loader from './Loader';\r\nimport './Globals';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isRegActive: false,\r\n            errormsg: null,\r\n            modalVisibility: \"none\",\r\n            loaderVisibility: \"none\",\r\n        }\r\n\r\n        //Binding functions\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.reg = this.reg.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"Token\") != null) {\r\n            window.location.href = loginConst.homePageRedirectUrl;\r\n        }\r\n    }\r\n\r\n    //Function to handle login and registration of user\r\n    handleSubmit(e) {\r\n\r\n        try {\r\n            e.preventDefault();\r\n\r\n            this.setState({ loaderVisibility: null });\r\n\r\n            if (this.state.isRegActive) {\r\n\r\n                let formData = new FormData();\r\n                formData.append('username', e.target[0].value);\r\n                formData.append('password', e.target[1].value);\r\n                formData.append('email', e.target[2].value);\r\n\r\n                this.reg(formData);\r\n            }\r\n            else {\r\n                let formData = new FormData();\r\n                formData.append('username', e.target[0].value);\r\n                formData.append('password', e.target[1].value);\r\n\r\n                this.login(formData, e.target[0].value);\r\n            }\r\n\r\n            this.refs.form.reset();\r\n\r\n        } catch (error) {\r\n            alert(systemMsg.internalError);\r\n        }\r\n    }\r\n\r\n    //Function to handle login of user\r\n    login(formData, username) {\r\n        try {\r\n\r\n            post_no_auth(\"login\", formData)\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.json()\r\n                            .then((res) => {\r\n\r\n                                localStorage.setItem(\"Token\", res.token);\r\n                                localStorage.setItem(\"username\", username);\r\n\r\n                                if (localStorage.getItem(\"Token\") !== null  &&\r\n                                    localStorage.getItem(\"username\") !== null ) {\r\n\r\n                                    global.token = res.token;\r\n                                    global.username = username;\r\n                                }\r\n\r\n                                window.location.href = loginConst.homePageRedirectUrl;\r\n                            })\r\n                    }\r\n                    else {\r\n                        return response.json()\r\n                            .then((res) => {\r\n                                this.setState({ errormsg: res.msg, modalVisibility: null, loaderVisibility: \"none\" })\r\n                            })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n\r\n                    this.setState({ errormsg: systemMsg.internalError, modalVisibility: null, loaderVisibility: \"none\" });\r\n                });\r\n\r\n        } catch (error) {\r\n\r\n            this.setState({ errormsg: systemMsg.internalError, modalVisibility: null, loaderVisibility: \"none\" });\r\n        }\r\n    }\r\n\r\n    //Function to handle registration of user\r\n    reg(formData) {\r\n        try {\r\n\r\n            post_no_auth(\"reg\", formData)\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.json()\r\n                            .then((res) => {\r\n                                this.setState({ errormsg: res.msg, modalVisibility: null, loaderVisibility: \"none\" })\r\n                            })\r\n                    }\r\n                    else {\r\n                        return response.json()\r\n                            .then((res) => {\r\n                                this.setState({ errormsg: res.msg, modalVisibility: null, loaderVisibility: \"none\" })\r\n                            })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({ errormsg: systemMsg.internalError, loaderVisibility: \"none\" });\r\n                });\r\n\r\n        } catch (error) {\r\n            this.setState({ errormsg: systemMsg.internalError, loaderVisibility: \"none\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header side_menu_visibility=\"none\" />\r\n                <br /><br /> <hr />\r\n\r\n                <div className=\"outer-div popup\">\r\n                    Welcome to {this.state.isRegActive ? loginConst.textReg : loginConst.textLogin}\r\n\r\n                    <form onSubmit={(e) => this.handleSubmit(e)} ref=\"form\">\r\n\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                placeholder=\"Username*\"\r\n                                required=\"required\"\r\n                                className=\"form-control\"\r\n                                onKeyUp={(e) =>\r\n                                    lengthValidator(\r\n                                        e.target.value,\r\n                                        \"Username\",\r\n                                        this.refs.username\r\n                                    )\r\n                                }\r\n                            />\r\n\r\n                            <div ref=\"username\" className=\"error-text\"></div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password*\"\r\n                                required=\"required\"\r\n                                className=\"form-control\"\r\n                                ref=\"pass\"\r\n                                autoComplete=\"autoComplete\"\r\n                                onKeyUp={(e) =>\r\n                                    lengthValidator(\r\n                                        e.target.value,\r\n                                        \"Password\",\r\n                                        this.refs.password\r\n                                    )\r\n                                }\r\n                            />\r\n\r\n                            <div ref=\"password\" className=\"error-text\"></div>\r\n                        </div>\r\n\r\n                        {this.state.isRegActive ?\r\n                            <>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"cpassword\"\r\n                                        placeholder=\"Confirm Password*\"\r\n                                        className=\"form-control\"\r\n                                        required=\"required\"\r\n                                        autoComplete=\"autoComplete\"\r\n                                        onKeyUp={(e) => {\r\n                                            cpasswordValidator(\r\n                                                this.refs.pass.value,\r\n                                                e.target.value,\r\n                                                \"Confirm Password\",\r\n                                                this.refs.cpassword\r\n                                            );\r\n                                        }}\r\n                                    />\r\n\r\n                                    <div ref=\"cpassword\" className=\"error-text\"></div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email*\"\r\n                                        className=\"form-control\"\r\n                                        required=\"required\"\r\n                                        onKeyUp={(e) => {\r\n                                            emailValidator(\r\n                                                e.target.value,\r\n                                                \"Email\",\r\n                                                this.refs.email\r\n                                            );\r\n                                        }}\r\n                                    />\r\n\r\n                                    <div ref=\"email\" className=\"error-text\"></div>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        <div>\r\n                            <input\r\n                                type=\"submit\"\r\n                                value={this.state.isRegActive ? loginConst.textReg : loginConst.textLogin}\r\n                                className=\"btn-primary\" />\r\n\r\n                            <input\r\n                                type=\"reset\"\r\n                                className=\"btn-regular\"\r\n                            />\r\n\r\n                        </div>\r\n                        <div>\r\n                            <font\r\n                                onClick={() =>\r\n                                    this.state.isRegActive ?\r\n                                        this.setState({ isRegActive: false, }) :\r\n                                        this.setState({ isRegActive: true })}\r\n                            >\r\n                                <br />\r\n                                <u> OR\r\n                                    {this.state.isRegActive ?\r\n                                        loginConst.textLogin.toUpperCase() :\r\n                                        loginConst.textReg.toUpperCase()\r\n                                    }\r\n                                    NOW..! </u>\r\n                            </font>\r\n\r\n                        </div>\r\n\r\n                        <Loader visibility={this.state.loaderVisibility} />\r\n                    </form>\r\n\r\n                    <Modal\r\n                        title=\"Info\"\r\n                        content={this.state.errormsg}\r\n                        visibility={this.state.modalVisibility}\r\n                        onClose={() => this.setState({ modalVisibility: \"none\" })}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","module.exports = __webpack_public_path__ + \"static/media/logout-icon.bb6dc57c.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.e4b6323e.gif\";","module.exports = __webpack_public_path__ + \"static/media/empty-list-icon.a1167211.png\";","module.exports = __webpack_public_path__ + \"static/media/card-background.fd0c9d30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/calender-icon.15f6ce85.png\";","import React, { Component } from 'react';\r\n\r\nlet counter = 60;\r\nclass Timer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hours: null,\r\n            minutes: null,\r\n            counter: null,\r\n        }\r\n\r\n        //Binding functions\r\n        this.countDown1 = this.countDown1.bind(this);\r\n        this.countDown2 = this.countDown2.bind(this);\r\n    }\r\n\r\n    //Function to calculate time and hours for countdown timer\r\n    componentDidMount() {\r\n        let hours, minutes;\r\n\r\n        if (this.props.time === 60) {\r\n            hours = 0;\r\n            minutes = 60;\r\n        } else if (this.props.time < 60) {\r\n            hours = \"00\";\r\n            minutes = this.props.time;\r\n        } else {\r\n            hours = Math.round(this.props.time / 60);\r\n            minutes = this.props.time - (hours * 60);\r\n        }\r\n\r\n        this.setState({ hours, minutes });\r\n\r\n        //Calling function to start countdown\r\n        this.countDown1(counter);\r\n    }\r\n\r\n\r\n    //Countdown function for decrement second from total time.\r\n    countDown1(counter) {\r\n\r\n        let minutes = this.state.minutes;\r\n        let hours = this.state.hours;\r\n\r\n        if (minutes === 0 && hours === 0) {\r\n            this.setState({ minutes: \"00\", hours: \"00\", counter: \"00\" });\r\n        } else {\r\n\r\n            this.setState({ counter });\r\n\r\n            if (counter === 0) {\r\n                counter = 60;\r\n\r\n                if (minutes !== 0) {\r\n                    minutes = minutes - 1;\r\n                    this.setState({ minutes });\r\n                } else {\r\n                    if (hours > 0) {\r\n                        hours -= 1;\r\n                        minutes = 60;\r\n\r\n                        this.setState({ hours, minutes });\r\n                    }\r\n                }\r\n            }\r\n\r\n            setTimeout(() => {\r\n                counter -= 1;\r\n                this.countDown2(counter);\r\n            }, 1000)\r\n\r\n        }\r\n    }\r\n\r\n    //Countdown function for decrement second from total time.\r\n    countDown2(counter) {\r\n\r\n        let minutes = this.state.minutes;\r\n        let hours = this.state.hours;\r\n\r\n        if (minutes === 0 && hours === 0) {\r\n            this.setState({ minutes: \"00\", hours: \"00\", counter: \"00\" });\r\n        } else {\r\n            this.setState({ counter });\r\n\r\n            if (counter === 0) {\r\n                counter = 60;\r\n\r\n                if (minutes !== 0) {\r\n                    minutes = minutes - 1;\r\n                    this.setState({ minutes });\r\n                } else {\r\n                    if (hours > 0) {\r\n                        hours -= 1;\r\n                        minutes = 60;\r\n\r\n                        this.setState({ hours, minutes });\r\n                    }\r\n                }\r\n            }\r\n\r\n            setTimeout(() => {\r\n                counter -= 1;\r\n                this.countDown1(counter);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                &nbsp; {this.state.hours} : {this.state.minutes} : {this.state.counter}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Timer from './Timer';\r\nimport * as moment from 'moment';\r\nimport '../scss/ListStyle.scss';\r\nimport { listConst } from './Constants';\r\n\r\nclass List extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.collection.length === 0\r\n                    ?\r\n                    <img\r\n                        src={require(\"../asset/images/empty-list-icon.png\")}\r\n                        className=\"empty-list\"\r\n                        alt={listConst.emptyListIconAltText}\r\n                    />\r\n\r\n                    :\r\n                    this.props.collection.map((item, index) => (\r\n\r\n                        <div className=\"block\">\r\n                            <div className=\"content\">\r\n\r\n                                <img\r\n                                    src={require(\"../asset/images/card-background.jpg\")}\r\n                                    width=\"100%\"\r\n                                    alt={listConst.cardBackgroundAltText}\r\n                                />\r\n\r\n                                <h5> Task: {item.taskname} </h5>\r\n                                <h6> Project: {item.projectname} </h6>\r\n                                <h6> Created Date: {item.created_date} </h6>\r\n\r\n                                <h6 style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={require(\"../asset/images/calender-icon.png\")}\r\n                                        width=\"15px\"\r\n                                        alt={listConst.calenderIconAltText}\r\n                                    />\r\n                                  &nbsp; {item.sdate} --- {item.edate}\r\n                                </h6>\r\n\r\n                                <button\r\n                                    className=\"btn-primary\"\r\n                                    onClick={() => this.refs['timer' + index].style.display = \"\"} >\r\n                                    Start Timer\r\n                                </button>\r\n\r\n                                <font ref={\"timer\" + index} style={{ display: 'none' }}>\r\n                                    <Timer\r\n                                        time={\r\n                                            Math.abs(\r\n                                                moment(item.sdate, \"HH:mm\")\r\n                                                    .diff(moment(item.edate, \"HH:mm\"),\r\n                                                        'minute')\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </font>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Modal from './Modal';\r\nimport List from './List';\r\nimport Loader from './Loader';\r\nimport { post, get } from './Rest';\r\nimport { requiredValidator } from './Validator';\r\nimport { homeConst, systemMsg } from './Constants';\r\nimport * as moment from 'moment';\r\nimport '../scss/HomeStyle.scss';\r\n\r\nclass Home extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      rowData: [],\r\n      msg: null,\r\n      modalVisibility: \"none\",\r\n      contentType: \"Add Task\",\r\n      modalTitle: \"Add Task\",\r\n      loaderVisibility: \"none\",\r\n    }\r\n\r\n    //Binding functions\r\n    this.getUserTask = this.getUserTask.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.modalContent = this.modalContent.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserTask();\r\n  }\r\n\r\n  //Function to fetch particular user tasks from api\r\n  getUserTask() {\r\n    try {\r\n\r\n      this.setState({ loaderVisibility: null });\r\n\r\n      get(homeConst.getUserTaskUrl)\r\n        .then((response) => {\r\n\r\n          if (response.ok) {\r\n            return response.json()\r\n              .then((res) => {\r\n                this.setState({ rowData: res.response, loaderVisibility: \"none\" })\r\n              })\r\n          }\r\n          else {\r\n            return response.json()\r\n              .then((res) => {\r\n                alert(res.msg);\r\n\r\n                if (res.status === 401) {\r\n                  localStorage.removeItem(\"Token\");\r\n                  localStorage.removeItem(\"username\");\r\n\r\n                  window.location.href = \"/react-task3\";\r\n                }\r\n              })\r\n          }\r\n        })\r\n    } catch (error) {\r\n      alert(systemMsg.internalError);\r\n\r\n      window.location.href = \"/react-task3\";\r\n    }\r\n  }\r\n\r\n  //Function to be called when insert form is submitted to add new task\r\n  handleSubmit(e) {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      let stime = moment(e.target[2].value, \"HH:mm\");\r\n      let etime = moment(e.target[3].value, \"HH:mm\");\r\n\r\n      if (stime.diff(etime, 'minute') <= 0) {\r\n\r\n        let formData = new FormData();\r\n        formData.append('taskname', e.target[0].value);\r\n        formData.append('projectname', e.target[1].value);\r\n        formData.append('stime', e.target[2].value);\r\n        formData.append('etime', e.target[3].value);\r\n        formData.append('username', localStorage.getItem('username'));\r\n        formData.append('Authorization', localStorage.getItem(\"Token\"));\r\n\r\n        post(\"task\", formData)\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              return response.json()\r\n                .then((res) => {\r\n                  this.setState({ msg: res.msg });\r\n\r\n                  this.getUserTask();\r\n\r\n                  this.refs.form.reset();\r\n                })\r\n            }\r\n            else {\r\n              return response.json()\r\n                .then((res) => {\r\n                  this.setState({ msg: res.msg })\r\n                })\r\n            }\r\n          });\r\n\r\n      } else {\r\n        this.setState({ msg: systemMsg.timeValidationError });\r\n      }\r\n\r\n    } catch (error) {\r\n\r\n      alert(systemMsg.internalError);\r\n    }\r\n  }\r\n\r\n  //Function to search user task by date filter from api\r\n  search(e) {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      if (moment().diff(e.target.value, 'day') >= 0) {\r\n\r\n        this.setState({ msg: null });\r\n\r\n        get(homeConst.getUserTaskByDateUrl + e.target.value + \"&\")\r\n          .then((response) => {\r\n\r\n            if (response.ok) {\r\n              return response.json()\r\n                .then((res) => {\r\n\r\n                  if (res.status !== \"500\") {\r\n                    this.setState({ rowData: res.response, msg: \"Found \" + res.response.length + \" tasks.\" })\r\n                  }\r\n                })\r\n            }\r\n            else {\r\n              return response.json()\r\n                .then((res) => {\r\n\r\n                  this.setState({ msg: \"Found 0 tasks.\" })\r\n                })\r\n            }\r\n          })\r\n      }\r\n      else {\r\n        this.setState({ msg: homeConst.futureDateValidationError })\r\n      }\r\n\r\n    } catch (error) {\r\n\r\n      alert(systemMsg.internalError);\r\n    }\r\n  }\r\n\r\n  //Function to decide what will be the content displayed to the user in popup modal.\r\n  modalContent() {\r\n\r\n    if (this.state.contentType === \"Add Task\") {\r\n      return (\r\n        <div className=\"input-modal-outer-div\">\r\n          <form onSubmit={(e) => this.handleSubmit(e)} ref=\"form\">\r\n\r\n            <div>\r\n              <div className=\"label\">\r\n                Task Name* : <div ref=\"taskname\" className=\"error-text\"></div>\r\n              </div>\r\n\r\n              <textarea name=\"taskname\" cols=\"24\" required=\"required\"\r\n                className=\"form-control\" placeholder=\"Task Name\"\r\n                onKeyUp={(e) =>\r\n                  requiredValidator(e.target.value, \"Task Name\", this.refs.taskname)\r\n                }\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">\r\n                Project* : <div ref=\"projectname\" className=\"error-text\"></div>\r\n              </div>\r\n\r\n              <select name=\"projectname\" className=\"form-control\" required=\"required\"\r\n                onChange={(e) =>\r\n                  requiredValidator(e.target.value, \"Project Name\", this.refs.projectname)\r\n                }>\r\n                <option> Project 1 </option>\r\n                <option> Project 2 </option>\r\n                <option> Project 3 </option>\r\n                <option> Project 4 </option>\r\n                <option> Project 5 </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">\r\n                Start Time* : <div ref=\"stime\" className=\"error-text\"></div>\r\n              </div>\r\n\r\n              <input type=\"time\" name=\"stime\" className=\"form-control\" required=\"required\"\r\n                onKeyUp={(e) =>\r\n                  requiredValidator(e.target.value, \"Start Time\", this.refs.stime)\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"label\">\r\n                End Time* : <div ref=\"etime\" className=\"error-text\"></div>\r\n              </div>\r\n\r\n              <input type=\"time\" name=\"etime\" className=\"form-control\" required=\"required\"\r\n                onKeyUp={(e) =>\r\n                  requiredValidator(e.target.value, \"End Time\", this.refs.etime)\r\n                } />\r\n            </div>\r\n\r\n            <div>\r\n              <br />\r\n              <input type=\"submit\" value=\"Submit\" className=\"btn-primary\" />\r\n              <input type=\"reset\" className=\"btn-regular\" />\r\n            </div>\r\n\r\n          </form>\r\n\r\n          <br />\r\n          <div className=\"error-text\"> {this.state.msg} </div>\r\n        </div>\r\n      );\r\n\r\n    } else {\r\n      return (\r\n\r\n        <div className=\"input-modal-outer-div\">\r\n          <div className=\"label\"> Select Date : </div>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => this.search(e)}\r\n          />\r\n\r\n          <br />\r\n          <div className=\"error-text\"> {this.state.msg} </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n\r\n        <div className=\"outer\">\r\n          <input\r\n            type=\"button\"\r\n            value=\"Add task\"\r\n            className=\"btn-primary\"\r\n            onClick={() => this.setState({\r\n              modalVisibility: \"\",\r\n              contentType: \"Add Task\",\r\n              modalTitle: \"Add Task\",\r\n              msg: null,\r\n            })}\r\n          />\r\n\r\n          <input\r\n            type=\"button\"\r\n            value=\"Filter\"\r\n            className=\"btn-regular\"\r\n            onClick={() => this.setState({\r\n              modalVisibility: \"\",\r\n              contentType: \"Filter\",\r\n              modalTitle: \"Filter\",\r\n              msg: null,\r\n            })}\r\n          />\r\n          <hr />\r\n\r\n        </div>\r\n\r\n\r\n        <Modal\r\n          title={this.state.modalTitle}\r\n          content={this.modalContent()}\r\n          visibility={this.state.modalVisibility}\r\n          onClose={() => this.setState({ modalVisibility: \"none\" })}\r\n        />\r\n\r\n        <List collection={this.state.rowData.reverse()} />\r\n\r\n        <Loader visibility={this.state.loaderVisibility} />\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Login from './Login';\r\nimport Home from './Home';\r\nimport { loginConst } from './Constants';\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router >\r\n                <Route exact path=\"/\" component={Login} />\r\n                <Route path={loginConst.homePageUrl} component={Home} />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Main from './components/Main';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Main />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}